{"ast":null,"code":"var _jsxFileName = \"/Users/davidpastor/DEV/playground/personal/pau-blog/components/RecommendedPosts.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { graphql } from \"react-apollo\";\nimport ReactMarkdown from \"react-markdown\";\nconst query = gql`\n  {\n    categories {\n      name\n      id\n      posts {\n        id\n        Title\n        Resumen\n      }\n    }\n  }\n`;\n\nconst RecomendedPosts = ({\n  data: {\n    loading,\n    error,\n    categories\n  },\n  postId\n}) => {\n  if (error) return \"Error loading posts\";\n\n  if (categories && categories.length) {\n    return __jsx(React.Fragment, null, categories.map(category => __jsx(\"div\", {\n      className: \"flex\",\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, category && category.posts.map(post => post.id !== postId && __jsx(\"div\", {\n      key: post.id,\n      className: \"w-full md:w-1/3 px-2 pb-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      href: `/post/${post.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }\n    }, __jsx(\"a\", {\n      className: \"h-full bg-white block rounded overflow-hidden shadow-md hover:shadow-lg relative smooth no-underline hover:no-underline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: \"https://source.unsplash.com/_AjqGGafofE/400x200\",\n      className: \"h-48 w-full rounded-t shadow-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }\n    }), __jsx(\"div\", {\n      className: \"p-6 h-auto md:h-48\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }\n    }, __jsx(\"p\", {\n      className: \"text-gray-600 text-xs md:text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, category.name), __jsx(\"div\", {\n      className: \"font-bold text-xl text-gray-900\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, post.Title), __jsx(\"p\", {\n      className: \"text-gray-800 font-serif text-base mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, post.Resumen)), __jsx(\"div\", {\n      className: \"flex items-center justify-between inset-x-0 bottom-0 p-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }\n    }, __jsx(\"img\", {\n      className: \"w-8 h-8 rounded-full mr-4\",\n      src: \"http://i.pravatar.cc/300\",\n      alt: \"Avatar of Author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }), __jsx(\"p\", {\n      className: \"text-gray-600 text-xs md:text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, \"2 MIN READ\")))))))));\n  }\n\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, \"Loading...\");\n};\n\nexport default graphql(query, {\n  props: ({\n    data\n  }) => ({\n    data\n  })\n})(RecomendedPosts);","map":{"version":3,"sources":["/Users/davidpastor/DEV/playground/personal/pau-blog/components/RecommendedPosts.js"],"names":["gql","Link","graphql","ReactMarkdown","query","RecomendedPosts","data","loading","error","categories","postId","length","map","category","id","posts","post","name","Title","Resumen","props"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,MAAMC,KAAK,GAAGJ,GAAI;;;;;;;;;;;;CAAlB;;AAcA,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAR;AAAwCC,EAAAA;AAAxC,CAAD,KAAsD;AAC5E,MAAIF,KAAJ,EAAW,OAAO,qBAAP;;AAEX,MAAIC,UAAU,IAAIA,UAAU,CAACE,MAA7B,EAAqC;AACnC,WACE,4BACGF,UAAU,CAACG,GAAX,CAAgBC,QAAD,IACd;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,IACPA,QAAQ,CAACE,KAAT,CAAeH,GAAf,CACGI,IAAD,IACEA,IAAI,CAACF,EAAL,KAAYJ,MAAZ,IACE;AAAK,MAAA,GAAG,EAAEM,IAAI,CAACF,EAAf;AAAmB,MAAA,SAAS,EAAC,4BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,SAAQE,IAAI,CAACF,EAAG,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,yHAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,iDADN;AAEE,MAAA,SAAS,EAAC,iCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACI,IADZ,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,KADR,CAJF,EAOE;AAAG,MAAA,SAAS,EAAC,yCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,OADR,CAPF,CALF,EAgBE;AAAK,MAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,GAAG,EAAC,0BAFN;AAGE,MAAA,GAAG,EAAC,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAG,MAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,CAhBF,CADF,CADF,CAHN,CAFJ,CADD,CADH,CADF;AA6CD;;AACD,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,CAnDD;;AAqDA,eAAejB,OAAO,CAACE,KAAD,EAAQ;AAC5BgB,EAAAA,KAAK,EAAE,CAAC;AAAEd,IAAAA;AAAF,GAAD,MAAe;AACpBA,IAAAA;AADoB,GAAf;AADqB,CAAR,CAAP,CAIZD,eAJY,CAAf","sourcesContent":["import gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { graphql } from \"react-apollo\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst query = gql`\n  {\n    categories {\n      name\n      id\n      posts {\n        id\n        Title\n        Resumen\n      }\n    }\n  }\n`;\n\nconst RecomendedPosts = ({ data: { loading, error, categories }, postId }) => {\n  if (error) return \"Error loading posts\";\n\n  if (categories && categories.length) {\n    return (\n      <>\n        {categories.map((category) => (\n          <div className=\"flex\" key={category.id}>\n            {category &&\n              category.posts.map(\n                (post) =>\n                  post.id !== postId && (\n                    <div key={post.id} className=\"w-full md:w-1/3 px-2 pb-12\">\n                      <Link href={`/post/${post.id}`}>\n                        <a className=\"h-full bg-white block rounded overflow-hidden shadow-md hover:shadow-lg relative smooth no-underline hover:no-underline\">\n                          <img\n                            src=\"https://source.unsplash.com/_AjqGGafofE/400x200\"\n                            className=\"h-48 w-full rounded-t shadow-lg\"\n                          />\n                          <div className=\"p-6 h-auto md:h-48\">\n                            <p className=\"text-gray-600 text-xs md:text-sm\">\n                              {category.name}\n                            </p>\n                            <div className=\"font-bold text-xl text-gray-900\">\n                              {post.Title}\n                            </div>\n                            <p className=\"text-gray-800 font-serif text-base mb-5\">\n                              {post.Resumen}\n                            </p>\n                          </div>\n                          <div className=\"flex items-center justify-between inset-x-0 bottom-0 p-6\">\n                            <img\n                              className=\"w-8 h-8 rounded-full mr-4\"\n                              src=\"http://i.pravatar.cc/300\"\n                              alt=\"Avatar of Author\"\n                            />\n                            <p className=\"text-gray-600 text-xs md:text-sm\">\n                              2 MIN READ\n                            </p>\n                          </div>\n                        </a>\n                      </Link>\n                    </div>\n                  )\n              )}\n          </div>\n        ))}\n      </>\n    );\n  }\n  return <h1>Loading...</h1>;\n};\n\nexport default graphql(query, {\n  props: ({ data }) => ({\n    data,\n  }),\n})(RecomendedPosts);\n\n"]},"metadata":{},"sourceType":"module"}