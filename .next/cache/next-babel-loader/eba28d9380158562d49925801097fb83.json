{"ast":null,"code":"import { createHttpLink } from \"apollo-link-http\";\nimport { withData } from \"next-apollo\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nconst token = \"57ba587149d255701211431aa8fe65\";\nconst httpLink = createHttpLink({\n  uri: \"https://graphql.datocms.com\"\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  return {\n    headers: Object.assign(headers || {}, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    })\n  };\n});\nconst config = {\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n};\nexport default withData(config);","map":{"version":3,"sources":["/Users/davidpastor/DEV/playground/personal/pau-blog/lib/apollo.js"],"names":["createHttpLink","withData","setContext","InMemoryCache","token","httpLink","uri","authLink","_","headers","Object","assign","Accept","Authorization","config","link","concat","cache"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,KAAK,GAAG,gCAAd;AAEA,MAAMC,QAAQ,GAAGL,cAAc,CAAC;AAC9BM,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGL,UAAU,CAAC,CAACM,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,SAAO;AACLA,IAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcF,OAAO,IAAI,EAAzB,EAA6B;AACpC,sBAAgB,kBADoB;AAEpCG,MAAAA,MAAM,EAAE,kBAF4B;AAGpCC,MAAAA,aAAa,EAAG,UAAST,KAAM;AAHK,KAA7B;AADJ,GAAP;AAOD,CAR0B,CAA3B;AAUA,MAAMU,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADO;AAEbY,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFM,CAAf;AAKA,eAAeF,QAAQ,CAACa,MAAD,CAAvB","sourcesContent":["import { createHttpLink } from \"apollo-link-http\";\nimport { withData } from \"next-apollo\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nconst token = \"57ba587149d255701211431aa8fe65\";\n\nconst httpLink = createHttpLink({\n  uri: \"https://graphql.datocms.com\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: Object.assign(headers || {}, {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`,\n    }),\n  };\n});\n\nconst config = {\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n};\n\nexport default withData(config);\n"]},"metadata":{},"sourceType":"module"}